#!/bin/bash
# Title: sensor-setup
# Description: This script will automate the tasks required to install artemis forwarder nodes in a distributed deployment architecture
# Author: Andrew T. Withers 

VERSION=1.00

uninstall () {

# Checking for a running instance of artemis-forwarder
if [[ -n $(pgrep -x artemis-forwarder) ]]; then
	echo "Shuttind down Artemis-forwarder..."
	service artemis-forwarder stop
fi

read -p 'Would you like to uninstall syslog-ng? [y/N]: ' ANSWER && ANSWER=${ANSWER,,}
if [[ $ANSWER == 'y' ]]; then
	echo "Removing syslog-ng..."
	service syslog-ng stop
	apt-get -y purge syslog-ng-core > /dev/null 2>&1
else
	echo "syslog-ng will not be uninstalled."
	sed -i "/destination artemis { udp("$(grep SCANNER /etc/artemis.conf | cut -d'=' -f2)" port(514)); };/d" /etc/syslog-ng/syslog-ng.conf
	sed -i '/log { source(s_bro_files); destination(artemis); };/d' /etc/syslog-ng/syslog-ng.conf 
fi
read -p 'Would you like uninstall inotify-tools? [y/N]: ' ANSWER && ANSWER=${ANSWER,,}
if [[ $ANSWER == 'y' ]]; then
	echo "Removing inotify-tools..."
	apt-get -y purge inotify-tools > /dev/null 2>&1
else
	echo "inotify-tools will not be uninstalled."
fi

echo "Removing files..."
rm /usr/bin/artemis-forwarder /usr/sbin/artemisFInit /lib/systemd/system/artemis-forwarder.service /var/log/artemis.err
rm -r /opt/artemis/

echo "Artemis-forwarder has been successfully uninstalled"
}

if [[ $1 == '-u' ]]; then
	if [[ $VERSION == $(grep VERSION= /etc/artemis.conf | cut -d'=' -f2) ]]; then
		uninstall
	else
		read -p "Uninstaller version mismatch. Would you like to proceed with uninstallation anyway? [y/N]: " ANSWER && ANSWER=${ANSWER,,}
		if [[ $ANSWER == 'y' ]]; then
			uninstall
		else
			echo "Uninstallation aborted"
		fi
	fi
	exit
else
	DIR="$1"	# The source directory that is to be monitored by the artemis sensors.
fi

cp /tmp/artemis/artemis.conf /etc/

# Add the source directory to the artemis.conf file
sed -i "s/SDIR=/SDIR=$DIR/" /etc/artemis.conf

# Initialize a flag that will indicate whether or not mlocate should be removed after installation
CLEAN=0

# Check for a running instanace of Artemis
if [[ -n $(pgrep -x artemis-forwarder) ]]; then
        echo "Shutting down Artemis-forwarder..."
        service artemis-fowarder stop
fi

echo "Installing Artemis sensor node..."

# Determine if mlocate needs to be installed
apt-get update -qq
if ! dpkg --get-selections | grep -v deinstall | grep -q mlocate; then
        CLEAN=1
        apt-get -y install mlocate > /dev/null 2>&1
fi

# Verify that syslog-ng is installed and configure it to send bro files-logs. If it is not installed, install it.
if ! dpkg --get-selections | grep -v deinstall | grep -q syslog-ng; then
	echo "Installing syslog-ng..."
	apt-get -y install syslog-ng-core > /dev/null 2>&1
fi

cat << EOF >> /etc/syslog-ng/syslog-ng.conf

source s_bro_files { file("/nsm/bro/logs/current/files.log" flags(no-parse) program_override("bro_files")); };
destination artemis { udp("$(grep SCANNER /etc/artemis.conf | cut -d'=' -f2)" port(514)); };
log { source(s_bro_files); destination(artemis); };
EOF
service syslog-ng restart

# Install inotify-tools if necessary
if ! dpkg --get-selections | grep -v deinstall | grep -q inotify-tools; then
        echo "Installing inotify-tools..."
        apt-get -y install inotify-tools > /dev/null 2>&1
fi

# Search for extract.bro
updatedb
case $(locate extract.bro | grep -vc /tmp/artemis/extract.bro) in
        0)
                echo "Unable to locate extract.bro file. Verify that Bro is installed and properly configured to extract files."
                echo "Aborting installation..."
                if [[ $CLEAN -eq 1 ]]; then
                        apt-get -y purge mlocate > /dev/null 2>&1
                fi
                exit 1
                ;;
        1)
                EXTLOC=$(locate extract.bro | grep -v /tmp/artemis/extract.bro)
                ;;
        *)
                LIST=($(locate extract.bro | grep -v /tmp/artemis/extract.bro))
                printf "Mulitple instances of extract.bro were found: \n"
                for ((i=0; i<"${#LIST[@]}"; i++)); do
                        echo "$((i+1))) ${LIST[$i]}"
                done
                read -p "Please select the correct location [1-$i]: " SELECT
                while [[ $SELECT -lt 1 ]] || [[ $SELECT -gt $i ]] || ! [[ $SELECT =~ ^[1-9]+$ ]]; do
                        echo "Invalid selection."
                        read -p "Please select the correct location [1-${#LIST[@]}]: " SELECT
                done
                EXTLOC="${LIST[$((SELECT-1))]}"
                ;;
esac

# Copy files
cp /tmp/artemis/artemis-forwarder /usr/bin/
cp /tmp/artemis/artemis-forwarder.service /lib/systemd/system/
cp /tmp/artemis/artemisFInit /usr/sbin/
cp /tmp/artemis/extract.bro "$EXTLOC"
mkdir -p /opt/artemis/
cp /tmp/artemis/sensor-setup /opt/artemis/


# Reload systemctl
systemctl daemon-reload && systemctl enable artemis > /dev/null 2>&1

# Remove mlocate if it was not previously installed
if [[ $CLEAN -eq 1 ]]; then
        echo "Cleaning up..."
        apt-get -y purge mlocate > /dev/null 2>&1
fi
rm -r /tmp/artemis/

echo "Starting Artemis forwarder..."
service artemis-forwarder start
